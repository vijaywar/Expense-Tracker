[{"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\index.js":"1","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\reportWebVitals.js":"2","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\App.js":"3","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\home\\Login.js":"4","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\home\\Home.js":"5","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\home\\write\\Write.js":"6","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\home\\write\\Bar.js":"7","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\home\\write\\Prev.js":"8","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\home\\write\\Decrypt.js":"9","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\BackEnd\\store.js":"10","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Home.js":"11","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Welcome\\WelcomeAnimation.js":"12","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\LandingPage\\LandingPage.js":"13","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Dashboard\\Dashboard.js":"14","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\NavBar\\NavBar.js":"15","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\AddNew\\AddNew.js":"16","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\BackEnd\\Login\\Login.js":"17","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Components\\Transactions.js":"18","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Components\\Report.js":"19","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Dashboard\\Charts.js":"20","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Components\\PiChart.js":"21","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Components\\TransactionsForm.js":"22"},{"size":524,"mtime":1638115879699,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1636178882881,"results":"25","hashOfConfig":"24"},{"size":1075,"mtime":1653311742900,"results":"26","hashOfConfig":"24"},{"size":2059,"mtime":1636178882848,"results":"27","hashOfConfig":"28"},{"size":7520,"mtime":1638115993266,"results":"29","hashOfConfig":"28"},{"size":4293,"mtime":1636178882870,"results":"30","hashOfConfig":"28"},{"size":448,"mtime":1636178882864,"results":"31","hashOfConfig":"28"},{"size":291,"mtime":1636178882868,"results":"32","hashOfConfig":"28"},{"size":390,"mtime":1636178882866,"results":"33","hashOfConfig":"28"},{"size":1419,"mtime":1654445129803,"results":"34","hashOfConfig":"24"},{"size":433,"mtime":1651564636201,"results":"35","hashOfConfig":"24"},{"size":373,"mtime":1638118314201,"results":"36","hashOfConfig":"24"},{"size":1319,"mtime":1642175680894,"results":"37","hashOfConfig":"24"},{"size":2766,"mtime":1656167359934,"results":"38","hashOfConfig":"24"},{"size":1570,"mtime":1656225847305,"results":"39","hashOfConfig":"24"},{"size":834,"mtime":1642949416738,"results":"40","hashOfConfig":"24"},{"size":2428,"mtime":1653835652844,"results":"41","hashOfConfig":"24"},{"size":2153,"mtime":1656166153695,"results":"42","hashOfConfig":"24"},{"size":8428,"mtime":1656232660737,"results":"43","hashOfConfig":"24"},{"size":5391,"mtime":1656235072322,"results":"44","hashOfConfig":"24"},{"size":3804,"mtime":1656237226440,"results":"45","hashOfConfig":"24"},{"size":3898,"mtime":1656167043965,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1yue66d",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"la1csq",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\index.js",[],["100","101"],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\reportWebVitals.js",[],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\App.js",["102","103"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport './styles/App.css';\r\n\r\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\r\nimport { createFirestoreInstance } from 'redux-firestore'\r\nimport store from './BackEnd/store'\r\nimport { Provider } from 'react-redux';\r\nimport firebase from 'firebase/app'\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport Login from './BackEnd/Login/Login'\r\n\r\nfunction App() {\r\n  const rrfConfig = {\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n  }\r\n  const rrfProps = {\r\n    firebase,\r\n    config: rrfConfig,\r\n    dispatch: store.dispatch,\r\n    createFirestoreInstance\r\n  }\r\n  return (\r\n    <Provider store={store}>\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n\r\n        <div className='body App-header'>\r\n          <Router>\r\n            <Login />\r\n\r\n          </Router>\r\n        </div>\r\n      </ReactReduxFirebaseProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\home\\Login.js",[],["104","105"],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\home\\Home.js",[],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\home\\write\\Write.js",[],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\home\\write\\Bar.js",[],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\home\\write\\Prev.js",[],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\home\\write\\Decrypt.js",[],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\BackEnd\\store.js",[],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Home.js",["106"],"import React from 'react'\r\nimport WelcomeAnimation from './Welcome/WelcomeAnimation'\r\nimport { useState } from 'react'\r\nimport LandingPage from './LandingPage/LandingPage'\r\nimport NavBar from './NavBar/NavBar'\r\nexport default function Home() {\r\n    const [Loaded, setLoaded] = useState(1)\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {!Loaded ? <WelcomeAnimation /> : <LandingPage />}\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Welcome\\WelcomeAnimation.js",[],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\LandingPage\\LandingPage.js",[],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Dashboard\\Dashboard.js",["107"],"\r\nimport { Route } from 'react-router'\r\nimport NavBar from '../NavBar/NavBar'\r\nimport AddNew from '../AddNew/AddNew'\r\nimport './Dashboard.css';\r\nimport { useFirestore } from 'react-redux-firebase';\r\nimport Transactions from '../Components/Transactions';\r\nimport Report from '../Components/Report';\r\nimport { useState, useEffect } from 'react';\r\nimport Charts from './Charts';\r\nexport default function Dashboard(props) {\r\n    const firebase = useFirestore()\r\n    let [records, setRecords] = useState([{\r\n        recordTime: '0',\r\n        amount: '',\r\n        fundsAction: '',\r\n        id: 0,\r\n        uid: ''\r\n    }])\r\n\r\n    let loadData = () => {\r\n        console.log(\"Called outside\")\r\n        if (records.length === 1) {\r\n            console.log(\"Called inside\")\r\n            firebase.collection(\"Data\").doc(props.userDetails.uid).collection(\"TradeData\").get()\r\n                .then(i => {\r\n                    records.pop();\r\n                    i.docs.forEach(doc => {\r\n                        let reco = doc.data();\r\n                        reco.uid = doc.id;\r\n                        records.push(reco);\r\n                        // console.log(reco);\r\n\r\n                    });\r\n                    setRecords(records.slice());\r\n                    console.log(records); console.log(\"get data above\")\r\n                })\r\n\r\n        }\r\n    }\r\n    let refreshDat = () => {\r\n        records = []\r\n        firebase.collection(\"Data\").doc(props.userDetails.uid).collection(\"TradeData\").get()\r\n            .then(i => {\r\n                records.pop();\r\n                i.docs.forEach(doc => {\r\n                    let reco = doc.data();\r\n                    reco.uid = doc.id;\r\n                    records.push(reco);\r\n\r\n                });\r\n                setRecords(records.slice());\r\n                // console.log(records); console.log(\"get data above\")\r\n            })\r\n    }\r\n    useEffect(() => { loadData() }, [])\r\n    return (\r\n        <div>\r\n\r\n            <NavBar userDetails={props.userDetails} />\r\n            <div className='gymBoard'>\r\n                <Route exact path='/dashboard/'>\r\n                    <Charts records={records} />\r\n                </Route>\r\n                <Route exact path='/dashboard/Trade'>\r\n                    <Transactions userDetails={props.userDetails} records={records} refresh={refreshDat} />\r\n                </Route>\r\n                <Route exact path='/dashboard/Report'>\r\n                    <Report records={records} userDetails={props.userDetails} refresh={refreshDat} />\r\n                </Route>\r\n                <Route path='/dashboard/Explore'>\r\n                    <div>\r\n                        <AddNew />\r\n                    </div>\r\n                </Route>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\NavBar\\NavBar.js",["108","109"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './NavBar.css'\r\nimport { useFirebase } from 'react-redux-firebase'\r\nexport default function NavBar(props) {\r\n    if (props.userDetails != undefined) {\r\n        console.log(props.userDetails)\r\n    }\r\n\r\n    const firebase = useFirebase();\r\n    let logout = () => {\r\n        firebase.logout();\r\n    }\r\n    let refer = () => {\r\n        console.log(\"Calling this\")\r\n        props.refresh();\r\n        console.log(props.refresh);\r\n    }\r\n    return (\r\n\r\n        < div >\r\n            <div className='gridOuter ProfileDetails' >\r\n               <div className='gridD'><p className='bg-secondary p-2 m-2  inlineblock VuserName'><i class=\"fa fa-user\" aria-hidden=\"true\"></i> {props.userDetails.displayName}</p> </div>\r\n                <div className='gridD' > <button className='btn-secondary m-2 text14 p-1 float-right Vlogout' onClick={logout} >Logout <i class=\"fa fa-sign-out\" aria-hidden=\"true\"></i></button> </div>\r\n            </div>\r\n            <div className=\"navBar\">\r\n            <Link to='/dashboard/Trade' className=\"navBarItem\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i> Add</Link>\r\n                <Link to='/dashboard/' className=\"navBarItem\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i> </Link>\r\n                <Link to='/dashboard/Report' className=\"navBarItem\"><i class=\"fa fa-list\" aria-hidden=\"true\"></i> Report</Link>\r\n            </div>\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\n// \r\n// <div className='me-3' onClick={refer}>Refresh<i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></div>\r\n","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\AddNew\\AddNew.js",[],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\BackEnd\\Login\\Login.js",[],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Components\\Transactions.js",["110","111","112"],"import React, { useState, useEffect } from 'react'\r\nimport { useInsertionEffect } from 'react';\r\nimport { useFirestore } from 'react-redux-firebase';\r\nimport './Transactions.css'\r\nimport TransactionsForm from './TransactionsForm';\r\nexport default function Transactions(props) {\r\n\r\n\r\n    let [records, setRecords] = useState([{\r\n        recordTime: '0',\r\n        amount: '',\r\n        fundsAction: '',\r\n        id: 0,\r\n        message: ''\r\n    }])\r\n    let [profit, setProfit] = useState(0)\r\n    let [totalprofit, settotalprofit] = useState(0)\r\n\r\n    let getData = () => {\r\n        profit = 0\r\n        totalprofit = 0\r\n        setRecords(props.records.slice());\r\n        for (var i of props.records) {\r\n            console.log(i, \"thi is i\")\r\n            if (i.fundsAction === \"W\") {\r\n                totalprofit -= parseInt(i.amount);\r\n                if (new Date(i.recordTime).getMonth() === new Date().getMonth()) {\r\n                    profit -= parseInt(i.amount);\r\n                }\r\n            }\r\n            else {\r\n                totalprofit += parseInt(i.amount);\r\n                if (new Date(i.recordTime).getMonth() === new Date().getMonth()) {\r\n                    profit += parseInt(i.amount);\r\n                }\r\n            }\r\n        }\r\n        setProfit(profit)\r\n        settotalprofit(totalprofit);\r\n    }\r\n    useEffect(() => { getData() }, [props.records])\r\n\r\n\r\n    return (\r\n        <div> <div className='card bg-dark gridOuter m-1 mx-md-5 marginTopMobile'>\r\n            <div className='p-2'><span className='gridD'>Month Balance :</span> {profit >= 0 ?\r\n                <span className='gridD text-success'>+{profit}</span>\r\n                : <span className='gridD text-warning'>{profit}</span>\r\n            }</div>\r\n            <div className='p-2'><span className='gridD'>Total Balance :</span>{totalprofit >= 0 ?\r\n                <span className='gridD text-success'>+{totalprofit}</span>\r\n                : <span className='gridD text-warning'>{totalprofit}</span>}</div>\r\n        </div>\r\n            <TransactionsForm records={records} userDetails={props.userDetails} refresh={props.refresh} />\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Components\\Report.js",["113"],"\r\nimport { useFirestore } from 'react-redux-firebase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Report.css'\r\nexport default function Report(props) {\r\n    const firebase = useFirestore();\r\n    let [records, setRecords] = useState([{\r\n        recordTime: '0',\r\n        amount: 1500,\r\n        fundsAction: '',\r\n        id: 0,\r\n        uid: ''\r\n    }])\r\n    let [deleteRecordState, setDeleteRecords] = useState({\r\n        recordTime: '0',\r\n        amount: 1500,\r\n        fundsAction: '',\r\n        id: 0,\r\n        uid: ''\r\n    })\r\n    let getData = () => {\r\n        let recordsOrder = props.records.slice();\r\n        recordsOrder = recordsOrder.sort((a, b) => new Date(a.recordTime) - new Date(b.recordTime))\r\n\r\n        console.log(recordsOrder, props.records)\r\n        for (let i of recordsOrder) {\r\n\r\n            console.log(\"sorted aray is:\" + i.recordTime)\r\n        }\r\n        setRecords(recordsOrder);\r\n    }\r\n    let deleteRecordModel = (e, id) => {\r\n        deleteRecordState = records.filter(i => i.uid === id)[0];\r\n        console.log(\"records\", records, \"id\", id, deleteRecordState)\r\n        setDeleteRecords(deleteRecordState);\r\n        document.getElementById(\"DeletemodelOPen\").click();\r\n    }\r\n    let deleteRecord = () => {\r\n        console.log(deleteRecordState.uid);\r\n        firebase.collection('Data').doc(props.userDetails.uid).collection(\"TradeData\").doc(deleteRecordState.uid).delete().then(props.refresh());\r\n    }\r\n\r\n    let [filterCode, setfilterCode] = useState(4);\r\n    useEffect(() => { getData() }, [props.records])\r\n    let filter = () => {\r\n        let recordsOrder = props.records.slice();\r\n        recordsOrder = recordsOrder.sort((a, b) => new Date(a.recordTime) - new Date(b.recordTime))\r\n        var fitlerdata = document.getElementById('filterValue').value;\r\n        let deadlineTIme = new Date();\r\n        setfilterCode(parseInt(fitlerdata))\r\n        switch (fitlerdata) {\r\n            case \"0\":\r\n                recordsOrder = recordsOrder.filter(i => new Date(i.recordTime).toLocaleDateString() === new Date().toLocaleDateString())\r\n                break;\r\n            case \"1\":\r\n                let weekDay = new Date().getDay();\r\n                if (weekDay === 0) weekDay = 7;\r\n                deadlineTIme = new Date(new Date().setDate(new Date().getDate() - weekDay))\r\n                deadlineTIme.setHours(0);\r\n                deadlineTIme.setMinutes(0);\r\n                deadlineTIme.setMilliseconds(0);\r\n                let weekEndTime = new Date(new Date().setDate(new Date().getDate() - weekDay + 7));\r\n                recordsOrder = recordsOrder.filter(i => new Date(i.recordTime) > deadlineTIme && new Date(i.recordTime) < weekEndTime)\r\n                break;\r\n            case \"2\":\r\n                let weekDayl = new Date().getDay();\r\n                if (weekDayl === 0) weekDayl = 7;\r\n                deadlineTIme = new Date(new Date().setDate(new Date().getDate() - weekDayl))\r\n                deadlineTIme.setHours(0);\r\n                deadlineTIme.setMinutes(0);\r\n                deadlineTIme.setMilliseconds(0);\r\n                let lastTIme = new Date(new Date().setDate(new Date().setDate(deadlineTIme.getDate() - 7)));\r\n                recordsOrder = recordsOrder.filter(i => new Date(i.recordTime) > lastTIme && new Date(i.recordTime) < deadlineTIme)\r\n                break;\r\n            case \"3\":\r\n                deadlineTIme = new Date(new Date().setDate(new Date().getDate() - new Date().getDay()))\r\n                deadlineTIme.setHours(0);\r\n                deadlineTIme.setMinutes(0);\r\n                deadlineTIme.setMilliseconds(0);\r\n                deadlineTIme.setDate(0);\r\n                recordsOrder = recordsOrder.filter(i => new Date(i.recordTime) > deadlineTIme);\r\n                break;\r\n            case \"4\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setRecords(recordsOrder);\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='m-1 m-md-5  card bg-secondary transactionCards'>\r\n                <div className='card-header transactionCardBody'>\r\n                    <span className='detailsName'>Details</span>\r\n                    <select id='filterValue' value={filterCode} onChange={filter} className=\"form-select filterButton\" aria-label=\"Default select example\">\r\n                        <option value=\"0\" >Today</option>\r\n                        <option value=\"1\">This Week</option>\r\n                        <option value=\"2\">Last Week</option>\r\n                        <option value=\"3\">This Month</option>\r\n                        <option defaultValue value=\"4\">All Time</option>\r\n                        <option value=\"5\">Custom</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"card-body mb-5 pb-3 maxsize90p \">\r\n                    {records ? records.map(i => <div key={i.uid} className='transactionCard'> {\r\n                        i.fundsAction === \"W\" ?\r\n                            <div className=\"card bg-dark\" key={i.id}>\r\n                                <p className=\"amountDisplay\">Amount: <span className=\"text-warning\">-{i.amount}</span></p>\r\n                                <p onClick={(event) => deleteRecordModel(event, i.uid)} className='deleteIcon'><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></p>\r\n                                <p className=\"text-warning\">Expense</p>\r\n                                <p >{new Date(i.recordTime).toLocaleString()}</p>\r\n                            </div>\r\n                            :\r\n                            <div className=\"card bg-dark\" key={i.id}>\r\n                                <p className=\"amountDisplay\">Amount: <span className=\"text-success\">+{i.amount}</span></p>\r\n                                <p onClick={(event) => deleteRecordModel(event, i.uid)} className='deleteIcon'><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></p>\r\n                                <p className=\"text-success\">Income</p>\r\n                                <p>{new Date(i.recordTime).toLocaleString()}</p>\r\n                            </div>\r\n                    }\r\n                    </div>\r\n                    ) : null}\r\n\r\n                    <button type=\"button\" class=\"btn btn-primary hide\" data-bs-toggle=\"modal\" id='DeletemodelOPen' data-bs-target=\"#DeleteconfirmPopup\">\r\n                        Launch demo modal\r\n                    </button>\r\n\r\n                    <div class=\"modal fade mt-5\" id=\"DeleteconfirmPopup\" >\r\n                        <div class=\"modal-dialog\">\r\n                            <div class=\"modal-content\">\r\n                                <div class=\"modal-header\">\r\n                                    <h5 class=\"modal-title text-dark\" id=\"exampleModalLabel\">Confirm Delete</h5>\r\n                                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                    <div className=\"card bg-dark\" >\r\n                                        <p className=\"amountDisplay\">Amount: {deleteRecordState.amount < 0 ? <span className=\"text-warning\">{deleteRecordState.amount}</span>\r\n                                            : <span className=\"text-success\">+{deleteRecordState.amount}</span>}</p>\r\n                                        {deleteRecordState.fundsAction === \"W\" ?\r\n                                            <p className=\"text-warning\">Expense</p>\r\n                                            : <p className=\"text-success\">Income</p>}\r\n                                        <p >{new Date().toLocaleString()}</p>\r\n                                    </div>\r\n                                    <p className='text-black'>Are you sure to Delete this Record?</p>\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                                    <button type=\"button\" onClick={deleteRecord} class=\"btn btn-primary\" data-bs-dismiss=\"modal\">Delete</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Dashboard\\Charts.js",["114"],"import React, { useEffect, useState } from 'react'\r\nimport PiChart from '../Components/PiChart';\r\n\r\nexport default function Charts(props) {\r\n\r\n\r\n    let [records, setRecords] = useState([{\r\n        recordTime: '0',\r\n        amount: '',\r\n        fundsAction: '',\r\n        id: 0,\r\n        message: ''\r\n    }])\r\n    let [profit, setProfit] = useState(0)\r\n    let [totalprofit, settotalprofit] = useState(0)\r\n    let [filterChart, setFilterChart] = useState(3);\r\n    let getData = (recordsOrder) => {\r\n        profit = 0\r\n        totalprofit = 0\r\n        let income = 0\r\n        let expense = 0\r\n        // setRecords(props.records.slice());\r\n        console.log(records);\r\n        for (var i of recordsOrder) {\r\n            console.log(i, \"thi is i\")\r\n            if (i.fundsAction === \"W\") {\r\n                totalprofit -= parseInt(i.amount);\r\n                if (new Date(i.recordTime).getMonth() === new Date().getMonth()) {\r\n                    profit -= parseInt(i.amount);\r\n                }\r\n                expense += parseInt(i.amount);\r\n            }\r\n            else {\r\n                totalprofit += parseInt(i.amount);\r\n                if (new Date(i.recordTime).getMonth() === new Date().getMonth()) {\r\n                    profit += parseInt(i.amount);\r\n                }\r\n                income += parseInt(i.amount);\r\n            }\r\n        }\r\n        setProfit(profit)\r\n        settotalprofit(totalprofit);\r\n        setIncomePercent({ data: income * 360 / (income + expense), expense: expense, income: income });\r\n\r\n    }\r\n    useEffect(() => { filterData() }, [props.records])\r\n\r\n    let filterData = () => {\r\n\r\n        let recordsOrder = props.records.slice();\r\n        recordsOrder = recordsOrder.sort((a, b) => new Date(a.recordTime) - new Date(b.recordTime))\r\n        var filterdata = document.getElementById('filterChart').value;\r\n        setFilterChart(parseInt(filterdata));\r\n        let deadlineTIme = new Date();\r\n        console.log(filterdata);\r\n        switch (filterdata) {\r\n            case \"0\":\r\n                recordsOrder = recordsOrder.filter(i => new Date(i.recordTime).toLocaleDateString() === new Date().toLocaleDateString())\r\n                break;\r\n            case \"1\":\r\n                let weekDay = new Date().getDay();\r\n                if (weekDay === 0) weekDay = 7;\r\n                deadlineTIme = new Date(new Date().setDate(new Date().getDate() - weekDay))\r\n                deadlineTIme.setHours(0);\r\n                deadlineTIme.setMinutes(0);\r\n                deadlineTIme.setMilliseconds(0);\r\n                let weekEndTime = new Date(new Date().setDate(new Date().getDate() - weekDay + 7));\r\n                // console.log(\"THis weeek filter\", deadlineTIme, weekEndTime, recordsOrder)\r\n                recordsOrder = recordsOrder.filter(i => new Date(i.recordTime) > deadlineTIme && new Date(i.recordTime) < weekEndTime)\r\n                //console.log(\"this records after week\", recordsOrder)\r\n                break;\r\n            case \"2\":\r\n                let weekDayl = new Date().getDay();\r\n                if (weekDayl === 0) weekDayl = 7;\r\n                deadlineTIme = new Date(new Date().setDate(new Date().getDate() - weekDayl))\r\n                deadlineTIme.setHours(0);\r\n                deadlineTIme.setMinutes(0);\r\n                deadlineTIme.setMilliseconds(0);\r\n                let lastTIme = new Date(new Date().setDate(new Date().setDate(deadlineTIme.getDate() - 7)));\r\n                recordsOrder = recordsOrder.filter(i => new Date(i.recordTime) > lastTIme && new Date(i.recordTime) < deadlineTIme)\r\n                break;\r\n            case \"3\":\r\n                deadlineTIme = new Date(new Date().setDate(new Date().getDate() - new Date().getDay()))\r\n                deadlineTIme.setHours(0);\r\n                deadlineTIme.setMinutes(0);\r\n                deadlineTIme.setMilliseconds(0);\r\n                deadlineTIme.setDate(0);\r\n                recordsOrder = recordsOrder.filter(i => new Date(i.recordTime) > deadlineTIme);\r\n                break;\r\n            case \"4\":\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setRecords(recordsOrder);\r\n        console.log(recordsOrder);\r\n        getData(recordsOrder);\r\n    }\r\n\r\n    let [recordPi, setIncomePercent] = useState({ data: 0, income: 0, expense: 0 })//useState([{ name: 'expense', amount: 40 }, { name: 'income', amount: 60 }])\r\n    return (\r\n        <div className='mt-1 text-white'>\r\n\r\n            <div className='card  picharCard'>\r\n                <div className=\"card-header text-white bg-vdark\">\r\n                    <span>This Month</span>\r\n                    <select id='filterChart' value={filterChart} onChange={filterData} className=\"form-select filterChartButton\" aria-label=\"Default select example\">\r\n                        <option value=\"0\" >Today</option>\r\n                        <option value=\"1\">This Week</option>\r\n                        <option value=\"2\">Last Week</option>\r\n                        <option value=\"3\">This Month</option>\r\n                        <option defaultValue value=\"4\">All Time</option>\r\n                        <option value=\"5\">Custom</option>\r\n                    </select>\r\n\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <PiChart data={recordPi} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Components\\PiChart.js",[],"C:\\Users\\BC PRASHANTH REDDY\\Documents\\My Web Sites\\Save\\src\\FrontEnd\\Components\\TransactionsForm.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":10,"column":35,"nodeType":"121","messageId":"122","endLine":10,"endColumn":40},{"ruleId":"119","severity":1,"message":"123","line":10,"column":42,"nodeType":"121","messageId":"122","endLine":10,"endColumn":48},{"ruleId":"115","replacedBy":"124"},{"ruleId":"117","replacedBy":"125"},{"ruleId":"119","severity":1,"message":"126","line":7,"column":20,"nodeType":"121","messageId":"122","endLine":7,"endColumn":29},{"ruleId":"127","severity":1,"message":"128","line":56,"column":37,"nodeType":"129","endLine":56,"endColumn":39,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":6,"column":27,"nodeType":"133","messageId":"134","endLine":6,"endColumn":29},{"ruleId":"119","severity":1,"message":"135","line":14,"column":9,"nodeType":"121","messageId":"122","endLine":14,"endColumn":14},{"ruleId":"119","severity":1,"message":"136","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":28},{"ruleId":"119","severity":1,"message":"137","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":22},{"ruleId":"127","severity":1,"message":"138","line":41,"column":36,"nodeType":"129","endLine":41,"endColumn":51,"suggestions":"139"},{"ruleId":"127","severity":1,"message":"138","line":44,"column":36,"nodeType":"129","endLine":44,"endColumn":51,"suggestions":"140"},{"ruleId":"127","severity":1,"message":"141","line":46,"column":39,"nodeType":"129","endLine":46,"endColumn":54,"suggestions":"142"},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.",["143"],["144"],"'setLoaded' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["145"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'refer' is assigned a value but never used.","'useInsertionEffect' is defined but never used.","'useFirestore' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["146"],["147"],"React Hook useEffect has a missing dependency: 'filterData'. Either include it or remove the dependency array.",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"151","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [loadData]",{"range":"156","text":"157"},"Update the dependencies array to be: [getData, props.records]",{"range":"158","text":"159"},{"range":"160","text":"159"},"Update the dependencies array to be: [filterData, props.records]",{"range":"161","text":"162"},[1919,1921],"[loadData]",[1363,1378],"[getData, props.records]",[1546,1561],[1577,1592],"[filterData, props.records]"]